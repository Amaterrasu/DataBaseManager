#Использовать logos

Перем ВсеЗамеры;
Перем ДатаНачала;
Перем ТекущийЗамер;
Перем ТекущийОтступ;

Процедура НачатьЗамер(ТекущийЛог, Знач Сообщение = "", Знач КлючЗамера = "") Экспорт
	
	Если Не ТипЗнч(ВсеЗамеры) = Тип("Структура") Тогда
		ВсеЗамеры = Новый Структура;
		ДатаНачала = ТекущаяДата();
	КонецЕсли;

	Если Не ПустаяСтрока(Сообщение) Тогда
		ТекущийЛог.Предупреждение(Сообщение);
	КонецЕсли;
	
	Если ПустаяСтрока(КлючЗамера) Тогда
		ВсеЗамеры.Вставить("ТекущийЗамер", ТекущаяУниверсальнаяДатаВМиллисекундах());
		ТекущийЗамер = "ТекущийЗамер";
	Иначе
		ВсеЗамеры.Вставить(КлючЗамера, ТекущаяУниверсальнаяДатаВМиллисекундах());
		ТекущийЗамер = КлючЗамера;
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьОтступ()
	
	Если Не ЗначениеЗаполнено(ТекущийОтступ) Тогда
		Отступ = 0;
	КонецЕсли;
	
	Возврат Отступ;

КонецФункции

Функция Продожительность()
	
	Продожительность = ТекущаяДата() - ДатаНачала;

	Если Продожительность < 30*60 Тогда // Если более получаса, то пишем часы
		Возврат Формат(Дата(1,1,1) + Продожительность, "ДФ=mm:ss");
	Иначе
		Возврат Формат(Дата(1,1,1) + Продожительность, "ДФ=HH:mm:ss");
	КонецЕсли;
	
КонецФункции

Функция Форматировать(Знач Уровень, Знач Сообщение) Экспорт

	// Отладка			0
	// Информация		1
	// Предупреждение	2
	// Ошибка			3
	// КритичнаяОшибка	4
	// Отключить		5
	НаименованиеУровня = УровниЛога.НаименованиеУровня(Уровень);

	Если Уровень = 0 Тогда
		НаименованиеУровня = ">:";
	ИначеЕсли Уровень = 1 Тогда 
		НаименованиеУровня = "i:";
	ИначеЕсли Уровень = 2 Тогда
		НаименованиеУровня = "!:";
	ИначеЕсли Уровень = 3 Тогда
		НаименованиеУровня = "error:";
	ИначеЕсли Уровень = 4 Тогда
		НаименованиеУровня = "ACHTUNG:";
	ИначеЕсли Уровень = 5 Тогда	
		Возврат "";			
	КонецЕсли;

	ШаблонСтроки = "%1";

	Для Счетчик = 0 По ПолучитьОтступ() Цикл
		ШаблонСтроки = ШаблонСтроки + "	";
	КонецЦикла;

	ШаблонСтроки = ШаблонСтроки + "%2 %3";

	// Пример строки: 00:01 >: Тестовое сообщение
	Возврат СтрШаблон(ШаблонСтроки, Продожительность(), НаименованиеУровня, Сообщение);

КонецФункции	